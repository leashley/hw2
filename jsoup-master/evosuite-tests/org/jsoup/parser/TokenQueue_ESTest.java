/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 12 02:41:59 GMT 2020
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.TokenQueue;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TokenQueue_ESTest extends TokenQueue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("5@twa`S8 fr_^=evu");
      tokenQueue0.consumeAttributeKey();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("LJq7ZDMty@2C=b`d");
      tokenQueue0.consumeCssIdentifier();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      tokenQueue0.consumeCssIdentifier();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("AylVhoZH_");
      tokenQueue0.consumeElementSelector();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("o1lO7@");
      tokenQueue0.remainder();
      tokenQueue0.consumeElementSelector();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      Character character0 = Character.valueOf('k');
      tokenQueue0.addFirst(character0);
      tokenQueue0.consumeTagName();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("U^,d");
      tokenQueue0.consumeWord();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TokenQueue.unescape("WT|J\u0005ej");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("U^,d");
      Character character0 = Character.valueOf('E');
      tokenQueue0.addFirst(character0);
      // Undeclared exception!
      try { 
        tokenQueue0.chompBalanced('E', '%');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Did not find balanced marker at 'U^,d'
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      tokenQueue0.consumeAttributeKey();
      tokenQueue0.chompBalanced(']', ';');
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("o1lO7@");
      Character character0 = Character.valueOf('S');
      tokenQueue0.addFirst(character0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "o1lO7@";
      stringArray0[1] = "o1lO7@";
      stringArray0[2] = "o1lO7@";
      stringArray0[3] = "o1lO7@";
      stringArray0[4] = "o1lO7@";
      stringArray0[5] = "{Je$X73ij";
      stringArray0[6] = "o1lO7@";
      tokenQueue0.consumeToAny(stringArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("N)a)8Af");
      tokenQueue0.consumeToIgnoreCase("Did not find balanced marker at '");
      tokenQueue0.consumeToAny((String[]) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("/N~");
      tokenQueue0.chompToIgnoreCase("/N~");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      // Undeclared exception!
      try { 
        tokenQueue0.consume(":HC");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Queue did not match expected sequence
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      tokenQueue0.consumeAttributeKey();
      tokenQueue0.advance();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"2Dv;lgR!2");
      tokenQueue0.chompBalanced('U', 'U');
      tokenQueue0.consumeElementSelector();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("{~+[u~#");
      tokenQueue0.consumeToIgnoreCase("               ");
      tokenQueue0.consumeWord();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("     ");
      tokenQueue0.consumeWhitespace();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("KSy\"W,_3H U");
      tokenQueue0.matchesWhitespace();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("U^,d");
      tokenQueue0.matchesStartTag();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M^u\"C'|_)k FT");
      tokenQueue0.consume("M^u\"C'|_)k FT");
      tokenQueue0.matchesStartTag();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("?");
      tokenQueue0.consumeTagName();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      char[] charArray0 = new char[2];
      tokenQueue0.matchesAny(charArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("         ");
      tokenQueue0.advance();
      tokenQueue0.consumeToIgnoreCase("         ");
      tokenQueue0.peek();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("oL.@@VATS");
      tokenQueue0.peek();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      tokenQueue0.consumeAttributeKey();
      tokenQueue0.chompTo("_");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("?");
      tokenQueue0.chompBalanced('_', '0');
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("{RM-|AlZ");
      tokenQueue0.toString();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("KSy\"W,_3H U");
      tokenQueue0.chompToIgnoreCase("            ");
      assertEquals("", tokenQueue0.toString());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("?");
      Character character0 = new Character('0');
      tokenQueue0.addFirst(character0);
      assertEquals("0?", tokenQueue0.toString());
      
      tokenQueue0.chompBalanced('_', '0');
      assertEquals('?', tokenQueue0.peek());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("?");
      tokenQueue0.matchesCS("");
      assertFalse(tokenQueue0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      assertFalse(tokenQueue0.isEmpty());
      
      tokenQueue0.chompTo("_");
      assertTrue(tokenQueue0.isEmpty());
  }
}
