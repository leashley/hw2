/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 12 01:05:37 GMT 2020
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DocumentType_ESTest extends DocumentType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("=}.iZmQ$$AI^vh", "", "=}.iZmQ$$AI^vh", "=}.iZmQ$$AI^vh", "=}.iZmQ$$AI^vh");
      MockPrintStream mockPrintStream0 = new MockPrintStream("=}.iZmQ$$AI^vh");
      Document.OutputSettings document_OutputSettings0 = documentType0.getOutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      documentType0.outerHtmlHead(mockPrintStream0, 62, document_OutputSettings0);
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("FoC\"^", "a", "FoC\"^", "");
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("=P(>x G|gsvgGJfF|", ".:VRQC:[@y", "<]6M[;[w&`s@ua");
      documentType0.setPubSysKey("");
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("=}.iZmQ$$AI^vh", "", "=}.iZmQ$$AI^vh", "=}.iZmQ$$AI^vh", "=}.iZmQ$$AI^vh");
      MockPrintStream mockPrintStream0 = new MockPrintStream("=}.iZmQ$$AI^vh");
      Document.OutputSettings document_OutputSettings0 = documentType0.getOutputSettings();
      documentType0.outerHtmlTail(mockPrintStream0, (byte)0, document_OutputSettings0);
  }
}
